#!/bin/ksh
##############################################################################
#	This front-end to the "Rock/Paper/Scissors" game generator rps_multi
#	provides pre-built playlists for variants with 3-25 play types.
#	Variations with 7 and above plays are based on charts published by
#	David Lovelace at umop.com; I interpolated the 13, 17, 19, 21, and 23
#	playlists from Lovelace's 11, 15, and 25 play variants.
#
#       Some inconsistencies between Lovelace's 15 and 25 play charts
#       thwart any effort at a smooth and consistent interpolation of the
#       interim charts (which should just involve adding two new plays for
#       each new level at the appropriate "opposite" locations in the list).
#       Specifically, Lovelace charts with 15 or fewer plays include a single
#       play for HUMAN, while the 25 play chart has adjacent separate plays
#       for MAN and WOMAN.  This glitch makes a discontinuity inevitable; I
#       chose to bite the bullet at the 17-play level.  To preserve the
#       greatest outcome consistency (apparently not a great concern of
#       Lovelace, who has TREE defeat LIGHTNING in his 25-play chart but the
#       reverse in the 15-play), I created the 17-play chart by dropping the
#       15-play chart's DRAGON play and introducing 3 new plays from the
#       19-play chart (DYNAMITE, MOON, SUN) instead of the usual two.  Moving
#       up from 17 to 19, we then just add DRAGON back in and split HUMAN into
#       MAN and WOMAN.
#
#	Lovelace also did a 101-play chart, but I found the 15->25
#	interpolation effort sufficiently discouraging that I haven't checked
#	his RPS-101 for consistency.
##############################################################################
#	Playlist logic is simple - given a game with 2X+1 plays (only
#	odd-numbered playlists work for balanced RPS games) and viewing the
#	playlist as a circular list, a given play defeats the X plays before
#	it and is defeated by the X plays after it.
##############################################################################

BASEDIR=${0%/*}
if [ $BASEDIR = $0 ]
then
	BASEDIR=.
fi

if [ $# -lt 1 ]
then
	PLAYSIZE=3
else
	PLAYSIZE=$1
fi

MATCHCNT=$(( $PLAYSIZE / 2 ))
if [ $(( ($MATCHCNT * 2) + 1 )) != $PLAYSIZE -o $PLAYSIZE -lt 3 ]
then
	echo "You must request an odd number of plays."
	exit 1
fi

OCFILE=${BASEDIR}/rps_outcomes.txt

case $PLAYSIZE in
	3)	rps_multi -f $OCFILE ROCK PAPER SCISSORS
		;;
	5)	rps_multi -f $OCFILE ROCK SPOCK PAPER LIZARD SCISSORS
		;;
	7)	rps_multi -f $OCFILE ROCK WATER AIR PAPER SPONGE \
			SCISSORS FIRE
		;;
	9)	rps_multi -f $OCFILE ROCK GUN WATER AIR PAPER SPONGE \
			HUMAN SCISSORS FIRE
		;;
	11)	rps_multi -f $OCFILE ROCK GUN DEVIL WATER AIR PAPER \
			SPONGE WOLF HUMAN SCISSORS FIRE
		;;
	13)	rps_multi -f $OCFILE ROCK GUN LIGHTNING DRAGON WATER \
			AIR PAPER SPONGE WOLF HUMAN SNAKE SCISSORS FIRE
		;;
	15)	rps_multi -f $OCFILE ROCK GUN LIGHTNING DEVIL DRAGON \
			WATER AIR PAPER SPONGE WOLF TREE HUMAN SNAKE \
			SCISSORS FIRE
		;;
	17)	rps_multi -f $OCFILE ROCK GUN DYNAMITE LIGHTNING DEVIL \
			WATER AIR MOON PAPER SPONGE WOLF TREE HUMAN \
			SNAKE SCISSORS FIRE SUN
		;;
	19)	rps_multi -f $OCFILE ROCK GUN DYNAMITE LIGHTNING DEVIL \
			DRAGON WATER AIR MOON PAPER SPONGE WOLF TREE MAN \
			WOMAN SNAKE SCISSORS FIRE SUN
		;;
	21)	rps_multi -f $OCFILE ROCK GUN DYNAMITE LIGHTNING DEVIL \
			DRAGON ALIEN WATER AIR MOON PAPER SPONGE WOLF TREE \
			MAN WOMAN MONKEY SNAKE SCISSORS FIRE SUN
		;;
	23)	rps_multi -f $OCFILE ROCK GUN DYNAMITE NUKE LIGHTNING \
			DEVIL DRAGON ALIEN WATER AIR MOON PAPER SPONGE \
			WOLF COCKROACH TREE MAN WOMAN MONKEY SNAKE \
			SCISSORS FIRE SUN
		;;
	25)	rps_multi -f $OCFILE ROCK GUN DYNAMITE NUKE LIGHTNING \
			DEVIL DRAGON ALIEN WATER BOWL AIR MOON PAPER SPONGE \
			WOLF COCKROACH TREE MAN WOMAN MONKEY SNAKE AXE \
			SCISSORS FIRE SUN 
		;;
	*)	echo "Sorry, I don't have a playlist for RPS $PLAYSIZE"
esac

##############################################################################
#	EOF
##############################################################################
