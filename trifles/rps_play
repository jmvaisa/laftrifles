#!/usr/bin/env bash
##############################################################################
#	rps_play - RPS outcome file interpreter
#
#	This general-purpose front-end script for the RPS game engine
#	"rps_multi" is designed to allow RPS-style games to be created and run
#	without having to create a customized shell script.  Taking the game
#	name as its sole argument, the script will search for an outcomes file
#	either in a special format expected by this script or that name itself
#	(e.g., given the name "fred", the script will search for a file named
#	rps_fred.txt, or failing that, fred; if neither are found in the
#	current directory, those searches are repeated in the directory where
#	this script resides).
#
#	The outcomes file should include one or more lines that start with
#	"#PLAY: ", each followed by the list of plays in the correct order for
#	RPS scoring (circular odd-numbered list, each play defeats the ones
#	before it and is defeated by the ones following - see rps_multi for
#	details).  Multiple #PLAY: lines are allowed in order to support long
#	play lists, e.g., a 51-play game (egads!) could list its plays in 4
#	lines of 12-13 plays each.  This script will extract the plays from the
#	#PLAY: line(s) and use that to invoke rps_multi.
#
###############################################################################

RPSDIR=${0%/*}

PFNAME=${1:-}
PLAYFILE=

for FINDFILE in \
	rps_${PFNAME}.txt \
	$PFNAME \
	${RPSDIR}/rps_${PFNAME}.txt \
	${RPSDIR}/$PFNAME 
do
	if [ -r "${FINDFILE}" ]
	then
		PLAYFILE=$FINDFILE
		break
	fi
done

if [ -z "${PLAYFILE}" ]
then
	echo "ERROR: no readable file found for $PFNAME." >&2
	exit 1
fi

PLAYLIST=$(grep "^#PLAY: " $PLAYFILE | cut -f2- -d:)

if [ -z "$PLAYLIST" ]
then
	echo "ERROR: Could not find #PLAY: line in $PLAYFILE." >&2
	exit 1
fi

rps_multi -t "${PFNAME^^}" -f $PLAYFILE $PLAYLIST

##############################################################################
#	EOF
##############################################################################
